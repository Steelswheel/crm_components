<?php

namespace Components\Vaganov\ReportsAll\PartnerMap;
use Dompdf\Exception;
use PhpOffice\PhpWord\TemplateProcessor;
use Table\RegisterShareholderTable;

require $_SERVER["DOCUMENT_ROOT"].'/local/composer/vendor/autoload.php';

class DocRender
{


    public function render_doc1($params){

        $template = $_SERVER['DOCUMENT_ROOT'] . '/local/lib/DocEdz/template/tek_sob_doc1.docx';
        $templateProcessor = new TemplateProcessor($template);
        $templateProcessor->setValue('FIO_PAY',  $params['UF_FIO']);
        $templateProcessor->setValue('PASSPORT', $params['UF_PASSPORT']);
        $templateProcessor->setValue('ADDRESS',  $params['UF_ADDRESS']);
        $templateProcessor->setValue('FIO_MAIN', $params['FIO_MAIN']);
        $templateProcessor->setValue('FIO_SEC',  $params['FIO_SEC']);
        $templateProcessor->setValue('PASSPORT_MAIN',  $params['PASSPORT_MAIN']);

        $path = "/local/components/vaganov/reports.all/PartnerMap/files/";
        $name = "{$params['UF_NUMBER']}, У-{$params['PLOT']} {$params['UF_FIO']} бюллетень.docx";
        $templateProcessor->saveAs($_SERVER["DOCUMENT_ROOT"].$path.$name);
    }

    public function render(){

        $path = $_SERVER["DOCUMENT_ROOT"]."/local/components/vaganov/reports.all/PartnerMap/js/42.json";
        $dataAgentStr = file_get_contents($path);
        $dataAgent = json_decode($dataAgentStr,1);

        $a = ["000023", "000024", "000025", "000026", "000027", "000028", "000029", "000030", "000031", "000032", "000033", "000035", "000036", "000037", "000038", "000134", "000142", "000146", "000155", "000208", "000215", "000506", "000520", "000535", "000547", "000548", "000562",
            "000585", "000586", "000588", "000601", "000603", "000616", "000617", "000668", "000674", "000680", "000681", "000810", "000902", "000914", "000931", "000939", "000968", "000975", "001069", "001099", "001112", "001130", "001136", "001139", "001140", "001149", "001153", "001164", "001166", "001230", "001239",
            "001242", "001243", "001250", "001269", "001283", "001315", "001317", "001360", "001371", "001373", "001453", "001460", "001485", "001486", "001487", "001500", "001501", "001502", "001503", "001504", "001505", "001506", "001513", "001538", "001542", "001543", "001544", "001546", "001561", "001562",
            "001583", "001584", "001585", "001586", "001589", "001590", "001592", "001594", "001599", "001604", "001605", "001606", "001607", "001608", "001609", "001623", "001624", "001635", "001638", "001639", "001640", "001647", "001649", "001658", "001660", "001661", "001662", "001676",
            "001678", "001691", "001704", "001705", "001706", "001707", "001718", "001723", "001729", "001736", "001743", "001756", "001764", "001767", "001778", "001780", "001781", "001782", "001792", "001793", "001800", "001802", "001805", "001808", "001819", "001832", "001835", "001842", "001845", "001859", "001870",
            "001872", "001891", "001897", "001903", "001912", "001918", "001924", "001925", "001930", "001932", "001940", "001957", "001965", "001969", "001974", "001997", "002003", "002011", "002013", "002028", "002037", "002038", "002047", "002053", "002058", "002059", "002069", "002070", "002072", "002075", "002077", "002078", "002109",
            "002116", "002119", "002122", "002126", "002128", "002134", "002137", "002139", "002140", "002143", "002147", "002151", "002153", "002154", "002162", "002167", "002171", "002173", "002174", "002175", "002176", "002181", "002190", "002191", "002201", "002205", "002207", "002216",
            "002218", "002219", "002224", "002227", "002229", "002230", "002234", "002235", "002245", "002250", "002255", "002258", "002259", "002260", "002261", "002262", "002264", "002265", "002268",
            "002269", "002270", "002272", "002275", "002276", "002277", "002278", "002279", "002281", "002283", "002286", "002287", "002291", "002292", "002293", "002296", "002297", "002299", "002300", "002302", "002305",
            "002309", "002313", "002316", "002317", "002318", "002319", "002320", "002321", "002323", "002325", "002327", "002328", "002329", "002331", "002332", "002336", "002338", "002342", "002343", "002344", "002345", "002349", "002351", "002353", "002354",
            "002355", "002356", "002358", "002359", "002360", "002361", "002362", "002363", "002364", "002365", "002366", "002368", "002370", "002371", "002372", "002373", "002374", "002375", "002376", "002377", "002378",
            "002379", "002380", "002381", "002382", "002383", "002384", "002385", "002386", "002387", "002388", "002389", "002390", "002391", "002393", "002394", "002395", "002396", "002397", "002398", "002399", "002400", "002401", "002402",
            "002403", "002404", "002405", "002406", "002407", "002408", "002411", "002412", "002413", "002414", "002416", "002417", "002418", "002419", "002420", "002421", "002422", "002423", "002424", "002425", "002426", "002427",
            "002429", "002430", "002431", "002432", "002433", "002434", "002435", "002436", "002437", "002438", "002439", "002440", "002441", "002442", "002445", "002446", "002447", "002448", "002449",
            "002450", "002452", "002453", "002454", "002455", "002457", "002459", "002460", "002462", "002463", "002464", "002465", "002467", "002468", "002469", "002470", "002472", "002473", "002474", "002475",
            "002476", "002477", "002478", "002479", "002480", "002481", "002483", "002484", "002486", "002490", "002493", "002494", "002495", "002496", "002499", "002500", "002501",
            "002502", "002503", "002509", "002510", "002514", "002516", "002519", "002522", "002523", "002525", "002527", "002530", "002531", "002533", "002543", "002544", "002549", "002557", "002581", "002588", "002598", "002606", "002612"
        ];

        $res = RegisterShareholderTable::getList([
            'filter' => ['UF_NUMBER' => $a],
        ])->fetchAll();



        foreach ($res as $row){

            $findMain = array_filter($dataAgent,function($part) use ($row){
                return in_array($row['UF_ADDRESS_CODE'],$part['regions']);
            });
            $findMain = reset($findMain);

            if($findMain['plot'] === "2"){
                if(!$findMain){
                    print_r($row);

                    throw new Exception('Не найден уполномоченный');
                }

                $row['FIO_MAIN'] = $findMain['name']; // Фио уполномоченного представителя
                $row['FIO_SEC'] =  $findMain['secretary']; // Фио секретаря
                $row['ADDRESS_MAIN'] =  $findMain['address']; // Адрес уполномоченного представителя
                $row['PASSPORT_MAIN'] =  $findMain['passport']; // Адрес уполномоченного представителя
                $row['PLOT'] =  $findMain['plot']; // Адрес уполномоченного представителя

                $this->render_doc1($row);
                echo "{$findMain['plot']} --- {$row['UF_NUMBER']} {$row['UF_FIO']} {$row['UF_ADDRESS_CODE']} {$findMain['name']}\n";
            }

        }

        echo count($a)." ".count($res);

    }
}